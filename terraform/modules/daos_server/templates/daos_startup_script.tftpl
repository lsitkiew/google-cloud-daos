#!/bin/bash

set -ex

METADATA_URL="http://metadata.google.internal/computeMetadata/v1/instance/attributes"
DAOS_SERVER_SYSTEMD_FILE="/usr/lib/systemd/system/daos_server.service"
DAOS_CONFIG_DIR="/etc/daos"
DAOS_DIR="/var/daos"
DAOS_MOUNT_DIR="$${DAOS_DIR}"
FIRST_DAOS_SERVER_HOSTNAME="${first_server}"

fetch_attr()
{
  local attr_name=$*
  curl -s $${METADATA_URL}/$${attr_name} -H "Metadata-Flavor: Google"
}

echo "BEGIN: DAOS Server Startup Script"

systemctl stop daos_server

# Create server config files from metadata
mkdir -p "$${DAOS_CONFIG_DIR}"
cd "$${DAOS_CONFIG_DIR}"
fetch_attr "daos_server_yaml_content" > daos_server.yml
fetch_attr "daos_control_yaml_content" > daos_control.yml
fetch_attr "daos_agent_yaml_content" > daos_agent.yml
chown -R root:root /etc/daos

# Create directory for engine logs and tmpfs mount point
mkdir -p "$${DAOS_MOUNT_DIR}"

# Modify systemd script for GCP
# GCP does not support VFIO so daos_server must run as root
sed -i "s/User=daos_server/User=root/; s/Group=daos_server/Group=root/" $${DAOS_SERVER_SYSTEMD_FILE}

if [[ "$${HOSTNAME}" == "$${FIRST_DAOS_SERVER_HOSTNAME}" ]]; then
  # Only run on the first DAOS server instance
  echo "Running startup script on first DAOS server"
  %{ if !allow_insecure }
  # Generate CA and certs. Store in Secret Manager.
  $${DAOS_DIR}/cert_gen/sm_set_ca.sh "${daos_ca_secret_id}"
  %{ endif }
fi

%{ if !allow_insecure ~}
# Get certs from Secret Manager and deploy them
$${DAOS_DIR}/cert_gen/sm_get_ca.sh "${daos_ca_secret_id}" "server"
%{ endif ~}

systemctl enable daos_server
systemctl start daos_server

#give time for dmg commands to work 
sleep 5

if [[ "$${HOSTNAME}" == "$${FIRST_DAOS_SERVER_HOSTNAME}" ]]; then
  until dmg network scan | grep --fixed-strings "${servers}"
  do
    # Wait for servers to start
    sleep 5
  done
  echo "All DAOS Servers started"

  echo "Formatting storage on servers: ${servers}"
  dmg storage format
  dmg system query -v
  

  while true
  do
    if [[ $(dmg system query -v | grep Joined | wc -l) -eq ${instances} ]]; then
      printf "\n%s\n" "DAOS storage format finished"
      dmg system query -v
      break
    fi
    printf "%s" "."
    sleep 5
  done
  
  echo "Done formating DAOS server"


  echo "Start: Setting up DAOS Agent "
  
  #to allow daos_agent to use the keys.  could be fixed??? 
  sed -i 's/User=daos_agent/User=root/g' /usr/lib/systemd/system/daos_agent.service
  sed -i 's/Group=daos_agent/Group=root/g' /usr/lib/systemd/system/daos_agent.service
  systemctl daemon-reload

  systemctl enable daos_agent
  systemctl start daos_agent
 
  echo "Done Setting up DAOS Agent"

  echo "Creating requested pools and containers"
 
  %{for pool in pools}
    dmg  pool create -t 3 -z ${pool.pool_size} ${pool.pool_name}
    %{for container in pool.containers}
      daos container create --type POSIX ${pool.pool_name} --label ${container}
    %{endfor}
  %{endfor}

  echo "Done creating requested pools and containers"

fi

echo "END: DAOS Server Startup Script"
